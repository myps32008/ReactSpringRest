{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'universal-cookie';\nconst base_url = process.env.NODE_ENV === \"production\" ? \"\" : \"http://localhost:8080\";\nconst http_instance = axios.create({\n  baseURL: `${base_url}/api/`\n});\n\nlet init = function (...inst) {\n  const cookies = new Cookies();\n  const user = cookies.get(\"user\");\n\n  if (user) {\n    inst.forEach(ins => {\n      ins.defaults.headers.common['Authorization'] = 'Bearer ' + user.token;\n    });\n  }\n};\n\ninit(http_instance);\nexport default {\n  internal: http_instance\n};\nexport const ahal = (user, ...instance) => {\n  if (!user && !user.token) {\n    instance.forEach(ins => {\n      ins.defaults.headers.common['Authorization'] = 'Bearer ' + user.token;\n    });\n  }\n};\nexport const rhal = (...instance) => {\n  instance.forEach(ins => {\n    delete ins.defaults.headers.common[\"Authorization\"];\n  });\n};","map":{"version":3,"sources":["D:/Working/ReactSpringRest/ClientApp/src/utils/http.client.js"],"names":["axios","Cookies","base_url","process","env","NODE_ENV","http_instance","create","baseURL","init","inst","cookies","user","get","forEach","ins","defaults","headers","common","token","internal","ahal","instance","rhal"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACb,EADa,GAEb,uBAFJ;AAIA,MAAMC,aAAa,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAG,GAAEN,QAAS;AADU,CAAb,CAAtB;;AAIA,IAAIO,IAAI,GAAG,UAAU,GAAGC,IAAb,EAAmB;AAC1B,QAAMC,OAAO,GAAG,IAAIV,OAAJ,EAAhB;AACA,QAAMW,IAAI,GAAGD,OAAO,CAACE,GAAR,CAAY,MAAZ,CAAb;;AACA,MAAID,IAAJ,EAAU;AACNF,IAAAA,IAAI,CAACI,OAAL,CAAaC,GAAG,IAAI;AAChBA,MAAAA,GAAG,CAACC,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4B,eAA5B,IAA+C,YAAYN,IAAI,CAACO,KAAhE;AACH,KAFD;AAGH;AACJ,CARD;;AAUAV,IAAI,CAACH,aAAD,CAAJ;AAEA,eAAe;AACXc,EAAAA,QAAQ,EAAEd;AADC,CAAf;AAIA,OAAO,MAAMe,IAAI,GAAG,CAACT,IAAD,EAAO,GAAGU,QAAV,KAAuB;AACvC,MAAG,CAACV,IAAD,IAAS,CAACA,IAAI,CAACO,KAAlB,EAAwB;AACpBG,IAAAA,QAAQ,CAACR,OAAT,CAAiBC,GAAG,IAAI;AACpBA,MAAAA,GAAG,CAACC,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4B,eAA5B,IAA+C,YAAYN,IAAI,CAACO,KAAhE;AACH,KAFD;AAGH;AACJ,CANM;AASP,OAAO,MAAMI,IAAI,GAAG,CAAC,GAAGD,QAAJ,KAAiB;AACjCA,EAAAA,QAAQ,CAACR,OAAT,CAAiBC,GAAG,IAAI;AACpB,WAAOA,GAAG,CAACC,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4B,eAA5B,CAAP;AACH,GAFD;AAGH,CAJM","sourcesContent":["import axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst base_url = process.env.NODE_ENV === \"production\" ? \r\n    \"\" : \r\n    \"http://localhost:8080\";\r\n\r\nconst http_instance = axios.create({\r\n    baseURL: `${base_url}/api/`\r\n});\r\n\r\nlet init = function (...inst) {    \r\n    const cookies = new Cookies();\r\n    const user = cookies.get(\"user\");    \r\n    if (user) {\r\n        inst.forEach(ins => {\r\n            ins.defaults.headers.common['Authorization'] = 'Bearer ' + user.token;\r\n        });\r\n    }\r\n}\r\n\r\ninit(http_instance);\r\n\r\nexport default {\r\n    internal: http_instance\r\n}\r\n\r\nexport const ahal = (user, ...instance) => {\r\n    if(!user && !user.token){\r\n        instance.forEach(ins => {\r\n            ins.defaults.headers.common['Authorization'] = 'Bearer ' + user.token;\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const rhal = (...instance) => {\r\n    instance.forEach(ins => {\r\n        delete ins.defaults.headers.common[\"Authorization\"];\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}